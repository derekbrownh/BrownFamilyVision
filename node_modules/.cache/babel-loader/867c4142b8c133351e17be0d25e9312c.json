{"remainingRequest":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Navbar\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Navbar\\Navbar.vue","mtime":1611012143273},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { CollapseTransition } from 'vue2-transitions';\nimport NavbarToggleButton from './NavbarToggleButton';\nlet resizeTimeout;\n\nfunction resizeThrottler(actualResizeHandler) {\n  // ignore resize events as long as an actualResizeHandler execution is in the queue\n  if (!resizeTimeout) {\n    resizeTimeout = setTimeout(() => {\n      resizeTimeout = null;\n      actualResizeHandler(); // The actualResizeHandler will execute at a rate of 15fps\n    }, 66);\n  }\n}\n\nexport default {\n  name: 'navbar',\n  props: {\n    transparent: {\n      type: Boolean,\n      default: false\n    },\n    position: {\n      type: String,\n      default: 'relative'\n    },\n    menuClasses: {\n      type: [String, Object, Array]\n    },\n    colorOnScroll: {\n      type: Number,\n      default: 0\n    },\n    type: {\n      type: String,\n      default: 'white',\n\n      validator(value) {\n        return ['white', 'default', 'primary', 'danger', 'success', 'warning', 'info'].includes(value);\n      }\n\n    }\n  },\n\n  provide() {\n    return {\n      closeNavbar: this.close\n    };\n  },\n\n  components: {\n    CollapseTransition,\n    NavbarToggleButton\n  },\n\n  data() {\n    return {\n      showMenu: false,\n      extraNavClasses: '',\n      currentScrollValue: 0\n    };\n  },\n\n  computed: {\n    slotData() {\n      return {\n        toggle: this.toggle,\n        open: this.open,\n        close: this.close,\n        isToggled: this.showMenu\n      };\n    },\n\n    classes() {\n      let color = `bg-${this.type}`;\n      let navPosition = `navbar-${this.position}`;\n      let colorOnScrollTransparent = this.colorOnScroll && this.currentScrollValue < this.colorOnScroll;\n\n      if (this.position === 'fixed') {\n        navPosition = 'fixed-top';\n      }\n\n      return [{\n        'navbar-transparent': this.transparent || colorOnScrollTransparent\n      }, {\n        [color]: !this.transparent && this.colorOnScroll === 0\n      }, navPosition, this.extraNavClasses];\n    }\n\n  },\n  methods: {\n    setNav(value) {\n      let docClasess = document.body.classList;\n\n      if (value) {\n        docClasess.add('nav-open');\n      } else {\n        docClasess.remove('nav-open');\n      }\n\n      let isOpen = docClasess.contains('nav-open');\n      let eventToTrigger = isOpen ? 'open' : 'close';\n      this.showMenu = isOpen;\n      this.$emit(eventToTrigger);\n    },\n\n    toggle() {\n      this.setNav(!this.showMenu);\n    },\n\n    open() {\n      this.setNav(true);\n    },\n\n    close() {\n      if (this.showMenu === false) {\n        return;\n      }\n\n      this.setNav(false);\n    },\n\n    handleScroll() {\n      let scrollValue = document.body.scrollTop || document.documentElement.scrollTop;\n      this.currentScrollValue = scrollValue;\n\n      if (this.colorOnScroll > 0 && scrollValue > this.colorOnScroll) {\n        this.extraNavClasses = `bg-${this.type}`;\n      } else {\n        if (this.extraNavClasses) {\n          this.extraNavClasses = '';\n        }\n      }\n    },\n\n    scrollListener() {\n      resizeThrottler(this.handleScroll);\n    }\n\n  },\n\n  mounted() {\n    document.addEventListener('scroll', this.scrollListener);\n  },\n\n  beforeDestroy() {\n    document.removeEventListener('scroll', this.scrollListener);\n  }\n\n};",{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <nav :class=\"classes\" class=\"navbar navbar-expand-lg\">\r\n        <div class=\"container\">\r\n            <div class=\"navbar-translate\">\r\n                <slot v-bind=\"slotData\"></slot>\r\n                <navbar-toggle-button :toggled=\"showMenu\" @click.native.stop=\"toggle\"></navbar-toggle-button>\r\n            </div>\r\n            <div class=\"collapse navbar-collapse show\"\r\n                 v-if=\"$slots['navbar-menu'] || $scopedSlots['navbar-menu']\"\r\n                 data-color=\"orange\"\r\n                 id=\"navigation\">\r\n                <ul class=\"navbar-nav\" :class=\"menuClasses\" v-click-outside=\"close\">\r\n                    <slot name=\"navbar-menu\" v-bind=\"slotData\"></slot>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n</template>\r\n<script>\r\n  import { CollapseTransition } from 'vue2-transitions';\r\n  import NavbarToggleButton from './NavbarToggleButton';\r\n  let resizeTimeout;\r\n  function resizeThrottler(actualResizeHandler) {\r\n    // ignore resize events as long as an actualResizeHandler execution is in the queue\r\n    if ( !resizeTimeout ) {\r\n      resizeTimeout = setTimeout(() => {\r\n        resizeTimeout = null;\r\n        actualResizeHandler();\r\n\r\n        // The actualResizeHandler will execute at a rate of 15fps\r\n      }, 66);\r\n    }\r\n  }\r\n\r\n  export default {\r\n    name: 'navbar',\r\n    props: {\r\n      transparent: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      position: {\r\n        type: String,\r\n        default: 'relative'\r\n      },\r\n      menuClasses: {\r\n        type: [String, Object, Array]\r\n      },\r\n      colorOnScroll: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      type: {\r\n        type: String,\r\n        default: 'white',\r\n        validator(value) {\r\n          return ['white', 'default', 'primary', 'danger', 'success', 'warning', 'info'].includes(value);\r\n        }\r\n      },\r\n    },\r\n    provide() {\r\n      return {\r\n        closeNavbar: this.close\r\n      }\r\n    },\r\n    components: {\r\n      CollapseTransition,\r\n      NavbarToggleButton\r\n    },\r\n    data() {\r\n      return {\r\n        showMenu: false,\r\n        extraNavClasses: '',\r\n        currentScrollValue: 0\r\n      }\r\n    },\r\n    computed: {\r\n      slotData(){\r\n        return {\r\n          toggle: this.toggle,\r\n          open: this.open,\r\n          close: this.close,\r\n          isToggled: this.showMenu\r\n        }\r\n      },\r\n      classes() {\r\n        let color = `bg-${this.type}`;\r\n        let navPosition = `navbar-${this.position}`;\r\n        let colorOnScrollTransparent = this.colorOnScroll && this.currentScrollValue < this.colorOnScroll;\r\n\r\n        if (this.position === 'fixed') {\r\n          navPosition = 'fixed-top';\r\n        }\r\n\r\n        return [\r\n          { 'navbar-transparent': (this.transparent || colorOnScrollTransparent) },\r\n          { [color]: (!this.transparent && this.colorOnScroll === 0) },\r\n          navPosition, this.extraNavClasses]\r\n      }\r\n    },\r\n    methods: {\r\n      setNav(value){\r\n        let docClasess = document.body.classList;\r\n        if(value){\r\n          docClasess.add('nav-open')\r\n        } else {\r\n          docClasess.remove('nav-open')\r\n        }\r\n        let isOpen = docClasess.contains('nav-open');\r\n        let eventToTrigger = isOpen ? 'open' : 'close';\r\n        this.showMenu = isOpen;\r\n        this.$emit(eventToTrigger)\r\n      },\r\n      toggle() {\r\n        this.setNav(!this.showMenu)\r\n      },\r\n      open(){\r\n        this.setNav(true);\r\n      },\r\n      close(){\r\n        if (this.showMenu === false) {\r\n          return\r\n        }\r\n        this.setNav(false);\r\n      },\r\n      handleScroll(){\r\n        let scrollValue = document.body.scrollTop || document.documentElement.scrollTop;\r\n        this.currentScrollValue = scrollValue;\r\n        if(this.colorOnScroll > 0 && scrollValue > this.colorOnScroll){\r\n          this.extraNavClasses = `bg-${this.type}`;\r\n        } else {\r\n          if(this.extraNavClasses){\r\n            this.extraNavClasses = ''\r\n          }\r\n        }\r\n      },\r\n      scrollListener() {\r\n        resizeThrottler(this.handleScroll)\r\n      }\r\n    },\r\n    mounted () {\r\n      document.addEventListener('scroll', this.scrollListener)\r\n    },\r\n    beforeDestroy () {\r\n      document.removeEventListener('scroll', this.scrollListener)\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/components/Navbar"}]}