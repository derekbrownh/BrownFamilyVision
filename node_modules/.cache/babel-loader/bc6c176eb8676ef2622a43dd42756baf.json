{"remainingRequest":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Pagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Pagination.vue","mtime":1611012143277},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'n-pagination',\n  props: {\n    type: {\n      type: String,\n      default: 'primary',\n      validator: value => {\n        return ['default', 'primary', 'danger', 'success', 'warning', 'info'].includes(value);\n      }\n    },\n    pageCount: {\n      type: Number,\n      default: 0\n    },\n    perPage: {\n      type: Number,\n      default: 10\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Number,\n      default: 1\n    },\n    prevItemClasses: [String, Object],\n    itemClasses: [String, Object],\n    nextItemClasses: [String, Object]\n  },\n  computed: {\n    paginationClass() {\n      return `pagination-${this.type}`;\n    },\n\n    totalPages() {\n      if (this.pageCount > 0) return this.pageCount;\n\n      if (this.total > 0) {\n        return Math.ceil(this.total / this.perPage);\n      }\n\n      return 1;\n    },\n\n    pagesToDisplay() {\n      if (this.totalPages > 0 && this.totalPages < this.defaultPagesToDisplay) {\n        return this.totalPages;\n      }\n\n      return this.defaultPagesToDisplay;\n    },\n\n    minPage() {\n      if (this.value >= this.pagesToDisplay) {\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        const newMaxPage = pagesToAdd + this.value;\n\n        if (newMaxPage > this.totalPages) {\n          return this.totalPages - this.pagesToDisplay + 1;\n        }\n\n        return this.value - pagesToAdd;\n      } else {\n        return 1;\n      }\n    },\n\n    maxPage() {\n      if (this.value >= this.pagesToDisplay) {\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        const newMaxPage = pagesToAdd + this.value;\n\n        if (newMaxPage < this.totalPages) {\n          return newMaxPage;\n        } else {\n          return this.totalPages;\n        }\n      } else {\n        return this.pagesToDisplay;\n      }\n    }\n\n  },\n\n  data() {\n    return {\n      defaultPagesToDisplay: 5\n    };\n  },\n\n  methods: {\n    range(min, max) {\n      let arr = [];\n\n      for (let i = min; i <= max; i++) {\n        arr.push(i);\n      }\n\n      return arr;\n    },\n\n    changePage(item) {\n      this.$emit('input', item);\n    },\n\n    nextPage() {\n      if (this.value < this.totalPages) {\n        this.$emit('input', this.value + 1);\n      }\n    },\n\n    prevPage() {\n      if (this.value > 1) {\n        this.$emit('input', this.value - 1);\n      }\n    }\n\n  },\n  watch: {\n    perPage() {\n      this.$emit('input', 1);\n    },\n\n    total() {\n      this.$emit('input', 1);\n    }\n\n  }\n};",{"version":3,"sources":["Pagination.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <ul class=\"pagination\" :class=\"paginationClass\">\r\n    <li class=\"page-item prev-page\" :class=\"[{disabled: value === 1}, prevItemClasses]\">\r\n      <a class=\"page-link\" aria-label=\"Previous\" @click=\"prevPage\">\r\n        «\r\n      </a>\r\n    </li>\r\n    <li class=\"page-item\"\r\n        v-for=\"item in range(minPage, maxPage)\"\r\n        :key=\"item\"\r\n        :class=\"[{active: value === item}, itemClasses]\">\r\n      <a class=\"page-link\" @click=\"changePage(item)\">{{item}}</a>\r\n    </li>\r\n    <li class=\"page-item page-pre next-page\" :class=\"[{disabled: value === totalPages}, nextItemClasses]\">\r\n      <a class=\"page-link\" aria-label=\"Next\" @click=\"nextPage\">\r\n        »\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</template>\r\n<script>\r\n  export default{\r\n    name: 'n-pagination',\r\n    props: {\r\n      type: {\r\n        type: String,\r\n        default: 'primary',\r\n        validator: (value) => {\r\n          return ['default', 'primary', 'danger', 'success', 'warning', 'info'].includes(value)\r\n        }\r\n      },\r\n      pageCount: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      perPage: {\r\n        type: Number,\r\n        default: 10\r\n      },\r\n      total: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      value: {\r\n        type: Number,\r\n        default: 1\r\n      },\r\n      prevItemClasses: [String, Object],\r\n      itemClasses: [String, Object],\r\n      nextItemClasses: [String, Object]\r\n    },\r\n    computed: {\r\n      paginationClass () {\r\n        return `pagination-${this.type}`\r\n      },\r\n      totalPages () {\r\n        if (this.pageCount > 0) return this.pageCount\r\n        if (this.total > 0) {\r\n          return Math.ceil(this.total / this.perPage)\r\n        }\r\n        return 1\r\n      },\r\n      pagesToDisplay () {\r\n        if (this.totalPages > 0 && this.totalPages < this.defaultPagesToDisplay) {\r\n          return this.totalPages\r\n        }\r\n        return this.defaultPagesToDisplay\r\n      },\r\n      minPage () {\r\n        if (this.value >= this.pagesToDisplay) {\r\n          const pagesToAdd = Math.floor(this.pagesToDisplay / 2)\r\n          const newMaxPage = pagesToAdd + this.value\r\n          if (newMaxPage > this.totalPages) {\r\n            return this.totalPages - this.pagesToDisplay + 1\r\n          }\r\n          return this.value - pagesToAdd\r\n        } else {\r\n          return 1\r\n        }\r\n      },\r\n      maxPage () {\r\n        if (this.value >= this.pagesToDisplay) {\r\n          const pagesToAdd = Math.floor(this.pagesToDisplay / 2)\r\n          const newMaxPage = pagesToAdd + this.value\r\n          if (newMaxPage < this.totalPages) {\r\n            return newMaxPage\r\n          } else {\r\n            return this.totalPages\r\n          }\r\n        } else {\r\n          return this.pagesToDisplay\r\n        }\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        defaultPagesToDisplay: 5\r\n      }\r\n    },\r\n    methods: {\r\n      range (min, max) {\r\n        let arr = []\r\n        for (let i = min; i <= max; i++) {\r\n          arr.push(i)\r\n        }\r\n        return arr\r\n      },\r\n      changePage (item) {\r\n        this.$emit('input', item)\r\n      },\r\n      nextPage () {\r\n        if (this.value < this.totalPages) {\r\n          this.$emit('input', this.value + 1)\r\n        }\r\n      },\r\n      prevPage () {\r\n        if (this.value > 1) {\r\n          this.$emit('input', this.value - 1)\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      perPage () {\r\n        this.$emit('input', 1)\r\n      },\r\n      total () {\r\n        this.$emit('input', 1)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  @import \"~@/assets/sass/now-ui-kit/variables\";\r\n  @import \"~@/assets/sass/now-ui-kit/pagination\";\r\n</style>\r\n"],"sourceRoot":"src/components"}]}