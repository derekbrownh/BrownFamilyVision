{"remainingRequest":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Tabs\\Tabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Tabs\\Tabs.vue","mtime":1611012143282},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'tabs',\n  inheritAttrs: false,\n  components: {\n    TabItemContent: {\n      props: ['tab'],\n\n      render(h) {\n        return h('div', [this.tab.$slots.label || this.tab.label]);\n      }\n\n    }\n  },\n\n  provide() {\n    return {\n      addTab: this.addTab,\n      removeTab: this.removeTab\n    };\n  },\n\n  props: {\n    type: {\n      type: String,\n      default: 'default',\n      validator: value => {\n        let acceptedValues = ['primary', 'info', 'success', 'warning', 'danger', 'default', 'neutral'];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    activeTab: {\n      type: String,\n      default: ''\n    },\n    tabNavWrapperClasses: {\n      type: [String, Object],\n      default: ''\n    },\n    tabNavClasses: {\n      type: [String, Object],\n      default: ''\n    },\n    tabContentClasses: {\n      type: [String, Object],\n      default: ''\n    },\n    vertical: Boolean,\n    noContentSpace: Boolean,\n    icons: Boolean,\n    centered: Boolean,\n    value: String,\n    pills: Boolean\n  },\n\n  data() {\n    return {\n      tabs: []\n    };\n  },\n\n  computed: {\n    tabTypeClass() {\n      let baseClass = this.pills ? 'pills' : 'tabs';\n\n      if (this.type) {\n        return `nav-${baseClass}-${this.type}`;\n      }\n\n      return '';\n    }\n\n  },\n  methods: {\n    findAndActivateTab(label) {\n      let tabToActivate = this.tabs.find(t => t.label === label);\n\n      if (tabToActivate) {\n        this.activateTab(tabToActivate);\n      }\n    },\n\n    activateTab(tab) {\n      if (this.handleClick) {\n        this.handleClick(tab);\n      }\n\n      this.deactivateTabs();\n      tab.active = true;\n      this.$emit('input', tab.label || tab.id);\n    },\n\n    deactivateTabs() {\n      this.tabs.forEach(tab => {\n        tab.active = false;\n      });\n    },\n\n    addTab(tab) {\n      const index = this.$slots.default.indexOf(tab.$vnode);\n\n      if (!this.activeTab && index === 0) {\n        tab.active = true;\n      }\n\n      if (this.activeTab === tab.name) {\n        tab.active = true;\n      }\n\n      this.tabs.splice(index, 0, tab);\n    },\n\n    removeTab(tab) {\n      const tabs = this.tabs;\n      const index = tabs.indexOf(tab);\n\n      if (index > -1) {\n        tabs.splice(index, 1);\n      }\n    }\n\n  },\n\n  mounted() {\n    this.$nextTick(() => {\n      if (this.value) {\n        this.findAndActivateTab(this.value);\n      }\n    });\n  },\n\n  watch: {\n    value(newVal) {\n      this.findAndActivateTab(newVal);\n    }\n\n  }\n};",{"version":3,"sources":["Tabs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,YAAA,EAAA,KAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,KAAA,EAAA,CAAA,KAAA,CADA;;AAEA,MAAA,MAAA,CAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,KAAA,EAAA,CAAA,KAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,KAAA,GAAA,CAAA,KAAA,CAAA,CAAA;AACA;;AAJA;AADA,GAHA;;AAWA,EAAA,OAAA,GAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KAAA,MADA;AAEA,MAAA,SAAA,EAAA,KAAA;AAFA,KAAA;AAIA,GAhBA;;AAiBA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,SAFA;AAGA,MAAA,SAAA,EAAA,KAAA,IAAA;AACA,YAAA,cAAA,GAAA,CAAA,SAAA,EAAA,MAAA,EAAA,SAAA,EAAA,SAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,CAAA;AACA,eAAA,cAAA,CAAA,OAAA,CAAA,KAAA,MAAA,CAAA,CAAA;AACA;AANA,KADA;AASA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,oBAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,QAAA,EAAA,OAzBA;AA0BA,IAAA,cAAA,EAAA,OA1BA;AA2BA,IAAA,KAAA,EAAA,OA3BA;AA4BA,IAAA,QAAA,EAAA,OA5BA;AA6BA,IAAA,KAAA,EAAA,MA7BA;AA8BA,IAAA,KAAA,EAAA;AA9BA,GAjBA;;AAiDA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GArDA;;AAsDA,EAAA,QAAA,EAAA;AACA,IAAA,YAAA,GAAA;AACA,UAAA,SAAA,GAAA,KAAA,KAAA,GAAA,OAAA,GAAA,MAAA;;AACA,UAAA,KAAA,IAAA,EAAA;AACA,eAAA,OAAA,SAAA,IAAA,KAAA,IAAA,EAAA;AACA;;AACA,aAAA,EAAA;AACA;;AAPA,GAtDA;AA+DA,EAAA,OAAA,EAAA;AACA,IAAA,kBAAA,CAAA,KAAA,EAAA;AACA,UAAA,aAAA,GAAA,KAAA,IAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA;;AACA,UAAA,aAAA,EAAA;AACA,aAAA,WAAA,CAAA,aAAA;AACA;AACA,KANA;;AAOA,IAAA,WAAA,CAAA,GAAA,EAAA;AACA,UAAA,KAAA,WAAA,EAAA;AACA,aAAA,WAAA,CAAA,GAAA;AACA;;AACA,WAAA,cAAA;AACA,MAAA,GAAA,CAAA,MAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,GAAA,CAAA,KAAA,IAAA,GAAA,CAAA,EAAA;AACA,KAdA;;AAeA,IAAA,cAAA,GAAA;AACA,WAAA,IAAA,CAAA,OAAA,CAAA,GAAA,IAAA;AACA,QAAA,GAAA,CAAA,MAAA,GAAA,KAAA;AACA,OAFA;AAGA,KAnBA;;AAoBA,IAAA,MAAA,CAAA,GAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA;;AACA,UAAA,CAAA,KAAA,SAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AACA,QAAA,GAAA,CAAA,MAAA,GAAA,IAAA;AACA;;AACA,UAAA,KAAA,SAAA,KAAA,GAAA,CAAA,IAAA,EAAA;AACA,QAAA,GAAA,CAAA,MAAA,GAAA,IAAA;AACA;;AACA,WAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,EAAA,GAAA;AACA,KA7BA;;AA8BA,IAAA,SAAA,CAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA,IAAA;AACA,YAAA,KAAA,GAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA;;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,EAAA;AACA,QAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA;AACA;;AApCA,GA/DA;;AAqGA,EAAA,OAAA,GAAA;AACA,SAAA,SAAA,CAAA,MAAA;AACA,UAAA,KAAA,KAAA,EAAA;AACA,aAAA,kBAAA,CAAA,KAAA,KAAA;AACA;AACA,KAJA;AAKA,GA3GA;;AA4GA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,CAAA,MAAA,EAAA;AACA,WAAA,kBAAA,CAAA,MAAA;AACA;;AAHA;AA5GA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <div :class=\"\r\n        [{'col-md-4': vertical && !tabNavWrapperClasses},\r\n        {'col-12': centered && !tabNavWrapperClasses},\r\n        tabNavWrapperClasses]\">\r\n      <ul class=\"nav\"\r\n          role=\"tablist\"\r\n          v-bind=\"$attrs\"\r\n          :class=\"\r\n          [ tabTypeClass,\r\n           {'nav-pills-icons': icons},\r\n           {'nav-pills': pills},\r\n           {'nav-tabs': !pills},\r\n           {'flex-column': vertical},\r\n           {'justify-content-center': centered},\r\n           tabNavClasses\r\n          ]\">\r\n\r\n        <li v-for=\"tab in tabs\"\r\n            class=\"nav-item active\"\r\n            data-toggle=\"tab\"\r\n            role=\"tablist\"\r\n            aria-expanded=\"true\"\r\n            :key=\"tab.id\">\r\n\r\n          <a data-toggle=\"tab\"\r\n             role=\"tablist\"\r\n             :href=\"`#${tab.id}`\"\r\n             @click.prevent=\"activateTab(tab)\"\r\n             :aria-expanded=\"tab.active\"\r\n             class=\"nav-link\"\r\n             :class=\"{active: tab.active}\">\r\n            <tab-item-content :tab=\"tab\">\r\n            </tab-item-content>\r\n          </a>\r\n\r\n        </li>\r\n\r\n      </ul>\r\n    </div>\r\n    <div class=\"tab-content\"\r\n         :class=\"[{'tab-space': !vertical && !noContentSpace}, 'text-left', {'col-md-8': vertical && !tabContentClasses}, tabContentClasses]\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'tabs',\r\n    inheritAttrs: false,\r\n    components: {\r\n      TabItemContent: {\r\n        props: ['tab'],\r\n        render(h) {\r\n          return h('div', [this.tab.$slots.label || this.tab.label])\r\n        }\r\n      }\r\n    },\r\n    provide() {\r\n      return {\r\n        addTab: this.addTab,\r\n        removeTab: this.removeTab\r\n      }\r\n    },\r\n    props: {\r\n      type: {\r\n        type: String,\r\n        default: 'default',\r\n        validator: (value) => {\r\n          let acceptedValues = ['primary', 'info', 'success', 'warning', 'danger', 'default', 'neutral'];\r\n          return acceptedValues.indexOf(value) !== -1\r\n        }\r\n      },\r\n      activeTab: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      tabNavWrapperClasses: {\r\n        type: [String, Object],\r\n        default: ''\r\n      },\r\n      tabNavClasses: {\r\n        type: [String, Object],\r\n        default: ''\r\n      },\r\n      tabContentClasses: {\r\n        type: [String, Object],\r\n        default: ''\r\n      },\r\n      vertical: Boolean,\r\n      noContentSpace: Boolean,\r\n      icons: Boolean,\r\n      centered: Boolean,\r\n      value: String,\r\n      pills: Boolean\r\n    },\r\n    data() {\r\n      return {\r\n        tabs: []\r\n      }\r\n    },\r\n    computed: {\r\n      tabTypeClass(){\r\n          let baseClass = this.pills ? 'pills': 'tabs';\r\n          if(this.type){\r\n            return `nav-${baseClass}-${this.type}`;\r\n          }\r\n          return ''\r\n      }\r\n    },\r\n    methods: {\r\n      findAndActivateTab(label){\r\n        let tabToActivate = this.tabs.find(t=> t.label === label);\r\n        if(tabToActivate){\r\n          this.activateTab(tabToActivate);\r\n        }\r\n      },\r\n      activateTab(tab) {\r\n        if (this.handleClick) {\r\n          this.handleClick(tab)\r\n        }\r\n        this.deactivateTabs();\r\n        tab.active = true;\r\n        this.$emit('input', tab.label || tab.id);\r\n      },\r\n      deactivateTabs() {\r\n        this.tabs.forEach(tab => {\r\n          tab.active = false\r\n        });\r\n      },\r\n      addTab(tab) {\r\n        const index = this.$slots.default.indexOf(tab.$vnode)\r\n        if (!this.activeTab && index === 0) {\r\n          tab.active = true;\r\n        }\r\n        if (this.activeTab === tab.name) {\r\n          tab.active = true\r\n        }\r\n        this.tabs.splice(index, 0, tab)\r\n      },\r\n      removeTab(tab) {\r\n        const tabs = this.tabs\r\n        const index = tabs.indexOf(tab)\r\n        if (index > -1) {\r\n          tabs.splice(index, 1)\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        if (this.value) {\r\n          this.findAndActivateTab(this.value);\r\n        }\r\n      })\r\n    },\r\n    watch: {\r\n      value(newVal) {\r\n        this.findAndActivateTab(newVal);\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  @import \"~@/assets/sass/now-ui-kit/variables\";\r\n  @import \"~@/assets/sass/now-ui-kit/tabs\";\r\n</style>\r\n"],"sourceRoot":"src/components/Tabs"}]}