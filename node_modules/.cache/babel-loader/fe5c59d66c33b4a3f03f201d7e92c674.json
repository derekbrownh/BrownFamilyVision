{"remainingRequest":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Dropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Dropdown.vue","mtime":1611012143267},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'drop-down',\n  props: {\n    direction: {\n      type: String,\n      default: 'down'\n    },\n    title: String,\n    icon: String,\n    position: String,\n    hideArrow: Boolean,\n    tag: {\n      type: String,\n      default: 'li'\n    }\n  },\n\n  data() {\n    return {\n      isOpen: false\n    };\n  },\n\n  provide() {\n    return {\n      closeDropDown: this.closeDropDown\n    };\n  },\n\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit('change', this.isOpen);\n    },\n\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', this.isOpen);\n    }\n\n  }\n};",{"version":3,"sources":["Dropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAwBA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA,MALA;AAMA,IAAA,IAAA,EAAA,MANA;AAOA,IAAA,QAAA,EAAA,MAPA;AAQA,IAAA,SAAA,EAAA,OARA;AASA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AATA,GAFA;;AAgBA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GApBA;;AAqBA,EAAA,OAAA,GAAA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,KAAA;AADA,KAAA;AAGA,GAzBA;;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,GAAA;AACA,WAAA,MAAA,GAAA,CAAA,KAAA,MAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,MAAA;AACA,KAJA;;AAKA,IAAA,aAAA,GAAA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,MAAA;AACA;;AARA;AA1BA,CAAA","sourcesContent":["<template>\r\n  <component class=\"dropdown\"\r\n             :is=\"tag\"\r\n             :class=\"[{show: isOpen}, {'dropdown': direction === 'down'}, {'dropup': direction ==='up'}]\"\r\n             aria-haspopup=\"true\"\r\n             :aria-expanded=\"isOpen\"\r\n             @click=\"toggleDropDown\"\r\n             v-click-outside=\"closeDropDown\">\r\n\r\n    <slot name=\"title\">\r\n      <a class=\"dropdown-toggle nav-link\"\r\n         :class=\"{'no-caret': hideArrow}\"\r\n         data-toggle=\"dropdown\">\r\n        <i :class=\"icon\"></i>\r\n        <span class=\"no-icon\">{{title}}</span>\r\n      </a>\r\n    </slot>\r\n    <ul class=\"dropdown-menu\"\r\n        :class=\"[{'dropdown-menu-right': position === 'right'}, {show: isOpen}]\">\r\n      <slot></slot>\r\n    </ul>\r\n  </component>\r\n</template>\r\n<script>\r\n  export default {\r\n    name: 'drop-down',\r\n    props: {\r\n      direction: {\r\n        type: String,\r\n        default: 'down'\r\n      },\r\n      title: String,\r\n      icon: String,\r\n      position: String,\r\n      hideArrow: Boolean,\r\n      tag: {\r\n        type: String,\r\n        default: 'li'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        isOpen: false\r\n      }\r\n    },\r\n    provide() {\r\n      return {\r\n        closeDropDown: this.closeDropDown\r\n      }\r\n    },\r\n    methods: {\r\n      toggleDropDown() {\r\n        this.isOpen = !this.isOpen\r\n        this.$emit('change', this.isOpen)\r\n      },\r\n      closeDropDown() {\r\n        this.isOpen = false\r\n        this.$emit('change', this.isOpen)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n  .dropdown {\r\n    list-style-type: none;\r\n  }\r\n\r\n  .dropdown .dropdown-toggle {\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}