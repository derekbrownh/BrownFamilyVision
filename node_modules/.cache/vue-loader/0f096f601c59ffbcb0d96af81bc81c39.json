{"remainingRequest":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Pagination.vue?vue&type=style&index=0&id=849a166c&lang=scss&scoped=true&","dependencies":[{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Pagination.vue","mtime":1611012143277},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"~@/assets/sass/now-ui-kit/variables\";\n@import \"~@/assets/sass/now-ui-kit/pagination\";\n",{"version":3,"sources":["Pagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA","file":"Pagination.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <ul class=\"pagination\" :class=\"paginationClass\">\r\n    <li class=\"page-item prev-page\" :class=\"[{disabled: value === 1}, prevItemClasses]\">\r\n      <a class=\"page-link\" aria-label=\"Previous\" @click=\"prevPage\">\r\n        «\r\n      </a>\r\n    </li>\r\n    <li class=\"page-item\"\r\n        v-for=\"item in range(minPage, maxPage)\"\r\n        :key=\"item\"\r\n        :class=\"[{active: value === item}, itemClasses]\">\r\n      <a class=\"page-link\" @click=\"changePage(item)\">{{item}}</a>\r\n    </li>\r\n    <li class=\"page-item page-pre next-page\" :class=\"[{disabled: value === totalPages}, nextItemClasses]\">\r\n      <a class=\"page-link\" aria-label=\"Next\" @click=\"nextPage\">\r\n        »\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</template>\r\n<script>\r\n  export default{\r\n    name: 'n-pagination',\r\n    props: {\r\n      type: {\r\n        type: String,\r\n        default: 'primary',\r\n        validator: (value) => {\r\n          return ['default', 'primary', 'danger', 'success', 'warning', 'info'].includes(value)\r\n        }\r\n      },\r\n      pageCount: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      perPage: {\r\n        type: Number,\r\n        default: 10\r\n      },\r\n      total: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      value: {\r\n        type: Number,\r\n        default: 1\r\n      },\r\n      prevItemClasses: [String, Object],\r\n      itemClasses: [String, Object],\r\n      nextItemClasses: [String, Object]\r\n    },\r\n    computed: {\r\n      paginationClass () {\r\n        return `pagination-${this.type}`\r\n      },\r\n      totalPages () {\r\n        if (this.pageCount > 0) return this.pageCount\r\n        if (this.total > 0) {\r\n          return Math.ceil(this.total / this.perPage)\r\n        }\r\n        return 1\r\n      },\r\n      pagesToDisplay () {\r\n        if (this.totalPages > 0 && this.totalPages < this.defaultPagesToDisplay) {\r\n          return this.totalPages\r\n        }\r\n        return this.defaultPagesToDisplay\r\n      },\r\n      minPage () {\r\n        if (this.value >= this.pagesToDisplay) {\r\n          const pagesToAdd = Math.floor(this.pagesToDisplay / 2)\r\n          const newMaxPage = pagesToAdd + this.value\r\n          if (newMaxPage > this.totalPages) {\r\n            return this.totalPages - this.pagesToDisplay + 1\r\n          }\r\n          return this.value - pagesToAdd\r\n        } else {\r\n          return 1\r\n        }\r\n      },\r\n      maxPage () {\r\n        if (this.value >= this.pagesToDisplay) {\r\n          const pagesToAdd = Math.floor(this.pagesToDisplay / 2)\r\n          const newMaxPage = pagesToAdd + this.value\r\n          if (newMaxPage < this.totalPages) {\r\n            return newMaxPage\r\n          } else {\r\n            return this.totalPages\r\n          }\r\n        } else {\r\n          return this.pagesToDisplay\r\n        }\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        defaultPagesToDisplay: 5\r\n      }\r\n    },\r\n    methods: {\r\n      range (min, max) {\r\n        let arr = []\r\n        for (let i = min; i <= max; i++) {\r\n          arr.push(i)\r\n        }\r\n        return arr\r\n      },\r\n      changePage (item) {\r\n        this.$emit('input', item)\r\n      },\r\n      nextPage () {\r\n        if (this.value < this.totalPages) {\r\n          this.$emit('input', this.value + 1)\r\n        }\r\n      },\r\n      prevPage () {\r\n        if (this.value > 1) {\r\n          this.$emit('input', this.value - 1)\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      perPage () {\r\n        this.$emit('input', 1)\r\n      },\r\n      total () {\r\n        this.$emit('input', 1)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  @import \"~@/assets/sass/now-ui-kit/variables\";\r\n  @import \"~@/assets/sass/now-ui-kit/pagination\";\r\n</style>\r\n"]}]}