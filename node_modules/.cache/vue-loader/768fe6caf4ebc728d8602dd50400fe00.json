{"remainingRequest":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Dev\\GitHub\\StetsonFamilyDentistry\\src\\components\\Collapse\\CollapseItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\src\\components\\Collapse\\CollapseItem.vue","mtime":1611012143265},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {CollapseTransition} from 'vue2-transitions';\n\nexport default {\n  name: 'collapse-item',\n  components: {\n    CollapseTransition\n  },\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    id: String,\n    noIcon: Boolean\n  },\n  inject: {\n    animationDuration: {\n      default: 250\n    },\n    multipleActive: {\n      default: false\n    },\n    addItem: {\n      default: () => {}\n    },\n    removeItem: {\n      default: () => {}\n    },\n    deactivateAll: {\n      default: () => {}\n    }\n  },\n  computed: {\n    itemId() {\n      return this.id || this.title\n    }\n  },\n  data() {\n    return {\n      active: false\n    }\n  },\n  methods: {\n    activate(){\n      if(!this.multipleActive){\n        this.deactivateAll();\n      }\n      this.active = !this.active;\n    }\n  },\n  mounted() {\n    this.addItem(this)\n  },\n  destroyed() {\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el)\n    }\n    this.removeItem(this)\n  }\n}\n",{"version":3,"sources":["CollapseItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CollapseItem.vue","sourceRoot":"src/components/Collapse","sourcesContent":["<template>\r\n  <div class=\"card card-plain\">\r\n    <div role=\"tab\" id=\"headingOne\" class=\"card-header\">\r\n      <a data-toggle=\"collapse\"\r\n         data-parent=\"#accordion\"\r\n         :href=\"`#${itemId}`\"\r\n         @click.prevent=\"activate\"\r\n         :aria-expanded=\"active\"\r\n         :aria-controls=\"`content-${itemId}`\">\r\n        <slot name=\"title\">\r\n          {{title}}\r\n        </slot>\r\n        <slot name=\"icon\">\r\n          <i v-if=\"!noIcon\" class=\"now-ui-icons arrows-1_minimal-down\"></i>\r\n        </slot>\r\n      </a>\r\n    </div>\r\n    <collapse-transition :duration=\"animationDuration\">\r\n      <div v-show=\"active\"\r\n           :id=\"`content-${itemId}`\"\r\n           role=\"tabpanel\"\r\n           :aria-labelledby=\"title\"\r\n           class=\"collapsed\">\r\n        <div class=\"card-body\">\r\n          <slot></slot>\r\n        </div>\r\n      </div>\r\n    </collapse-transition>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {CollapseTransition} from 'vue2-transitions';\r\n\r\n  export default {\r\n    name: 'collapse-item',\r\n    components: {\r\n      CollapseTransition\r\n    },\r\n    props: {\r\n      title: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      id: String,\r\n      noIcon: Boolean\r\n    },\r\n    inject: {\r\n      animationDuration: {\r\n        default: 250\r\n      },\r\n      multipleActive: {\r\n        default: false\r\n      },\r\n      addItem: {\r\n        default: () => {}\r\n      },\r\n      removeItem: {\r\n        default: () => {}\r\n      },\r\n      deactivateAll: {\r\n        default: () => {}\r\n      }\r\n    },\r\n    computed: {\r\n      itemId() {\r\n        return this.id || this.title\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        active: false\r\n      }\r\n    },\r\n    methods: {\r\n      activate(){\r\n        if(!this.multipleActive){\r\n          this.deactivateAll();\r\n        }\r\n        this.active = !this.active;\r\n      }\r\n    },\r\n    mounted() {\r\n      this.addItem(this)\r\n    },\r\n    destroyed() {\r\n      if (this.$el && this.$el.parentNode) {\r\n        this.$el.parentNode.removeChild(this.$el)\r\n      }\r\n      this.removeItem(this)\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n</style>\r\n"]}]}