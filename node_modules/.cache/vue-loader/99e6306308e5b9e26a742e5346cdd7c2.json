{"remainingRequest":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Slider.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\src\\components\\Slider.vue","mtime":1611012143279},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\github\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"~@/assets/sass/now-ui-kit/variables\";\n@import \"~@/assets/sass/now-ui-kit/plugins/plugin-nouislider\";\n",{"version":3,"sources":["Slider.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA","file":"Slider.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"slider\"\r\n       :class=\"[`slider-${type}`]\"\r\n       :disabled=\"disabled\">\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n  import noUiSlider from 'nouislider'\r\n\r\n  export default {\r\n    name: 'slider',\r\n    props: {\r\n      value: [String, Array, Number],\r\n      disabled: Boolean,\r\n      start: {\r\n        type: [Number, Array],\r\n        default: 0\r\n      },\r\n      connect: {\r\n        type: [Boolean, Array],\r\n        default: () => [true, false]\r\n      },\r\n      range: {\r\n        type: Object,\r\n        default: () => {\r\n          return {\r\n            min: 0,\r\n            max: 100\r\n          }\r\n        }\r\n      },\r\n      type: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      options: {\r\n        type: Object,\r\n        default: () => {\r\n          return {}\r\n        }\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        slider: null\r\n      }\r\n    },\r\n    methods: {\r\n      createSlider() {\r\n        noUiSlider.create(this.$el, {\r\n          start: this.value || this.start,\r\n          connect: this.connect,\r\n          range: this.range,\r\n          ...this.options\r\n        });\r\n        const slider = this.$el.noUiSlider\r\n        slider.on('slide', () => {\r\n          let value = slider.get()\r\n          if (value !== this.value) {\r\n            this.$emit('input', value)\r\n          }\r\n        })\r\n      }\r\n    },\r\n    mounted() {\r\n      this.createSlider()\r\n    },\r\n    watch: {\r\n      value(newValue, oldValue) {\r\n        const slider = this.$el.noUiSlider\r\n        const sliderValue = slider.get()\r\n        if (newValue !== oldValue && sliderValue !== newValue) {\r\n          if (Array.isArray(sliderValue) && Array.isArray(newValue)) {\r\n            if (oldValue.length === newValue.length && oldValue.every((v, i) => v === newValue[i])) {\r\n              slider.set(newValue)\r\n            }\r\n          } else {\r\n            slider.set(newValue)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n  @import \"~@/assets/sass/now-ui-kit/variables\";\r\n  @import \"~@/assets/sass/now-ui-kit/plugins/plugin-nouislider\";\r\n</style>\r\n"]}]}