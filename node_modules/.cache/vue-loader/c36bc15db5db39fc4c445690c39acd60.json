{"remainingRequest":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Dev\\GitHub\\StetsonFamilyDentistry\\src\\components\\Inputs\\formGroupInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\src\\components\\Inputs\\formGroupInput.vue","mtime":1611012143270},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  inheritAttrs: false,\n  name: 'fg-input',\n  props: {\n    required: Boolean,\n    label: String,\n    error: String,\n    labelClasses: String,\n    inputClasses: String,\n    value: {\n      type: [String, Number],\n      default: ''\n    },\n    addonRightIcon: String,\n    addonLeftIcon: String\n  },\n  data() {\n    return {\n      focused: false\n    }\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.updateValue,\n        focus: this.onFocus,\n        blur: this.onBlur\n      }\n    },\n    hasIcon() {\n      const {addonRight, addonLeft} = this.$slots;\n      return addonRight !== undefined || addonLeft !== undefined || this.addonRightIcon !== undefined || this.addonLeftIcon !== undefined\n    }\n  },\n  methods: {\n    updateValue(evt) {\n      let value = evt.target.value;\n      this.$emit('input', value);\n    },\n    onFocus(value){\n      this.focused = true;\n      this.$emit('focus', value);\n    },\n    onBlur(value){\n      this.focused = false;\n      this.$emit('blur', value);\n    }\n  }\n}\n",{"version":3,"sources":["formGroupInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"formGroupInput.vue","sourceRoot":"src/components/Inputs","sourcesContent":["<template>\r\n  <div class=\"form-group\"\r\n       :class=\"[\r\n       {'input-group': hasIcon},\r\n       {'has-danger': error},\r\n       {'input-group-focus': focused},\r\n       {'has-label': label || $slots.label}]\">\r\n    <slot name=\"label\">\r\n      <label v-if=\"label\" :class=\"labelClasses\">\r\n        {{label}}\r\n        <span v-if=\"required\">*</span>\r\n      </label>\r\n    </slot>\r\n\r\n    <slot name=\"addonLeft\">\r\n      <div v-if=\"addonLeftIcon\" class=\"input-group-prepend\">\r\n        <i class=\"input-group-text\" :class=\"addonLeftIcon\"></i>\r\n      </div>\r\n    </slot>\r\n    <slot>\r\n      <input\r\n        :value=\"value\"\r\n        v-on=\"listeners\"\r\n        v-bind=\"$attrs\"\r\n        class=\"form-control\"\r\n        :class=\"[{valid: value && !error}, inputClasses]\"\r\n        aria-describedby=\"addon-right addon-left\">\r\n    </slot>\r\n    <slot name=\"addonRight\">\r\n        <span v-if=\"addonRightIcon\" class=\"input-group-addon input-group-append\">\r\n          <i class=\"input-group-text\" :class=\"addonRightIcon\"></i>\r\n        </span>\r\n    </slot>\r\n\r\n    <slot name=\"infoBlock\"></slot>\r\n    <slot name=\"helpBlock\">\r\n      <div class=\"text-danger invalid-feedback\" style=\"display: block;\" :class=\"{'mt-2': hasIcon}\" v-if=\"error\">\r\n        {{ error }}\r\n      </div>\r\n    </slot>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    inheritAttrs: false,\r\n    name: 'fg-input',\r\n    props: {\r\n      required: Boolean,\r\n      label: String,\r\n      error: String,\r\n      labelClasses: String,\r\n      inputClasses: String,\r\n      value: {\r\n        type: [String, Number],\r\n        default: ''\r\n      },\r\n      addonRightIcon: String,\r\n      addonLeftIcon: String\r\n    },\r\n    data() {\r\n      return {\r\n        focused: false\r\n      }\r\n    },\r\n    computed: {\r\n      listeners() {\r\n        return {\r\n          ...this.$listeners,\r\n          input: this.updateValue,\r\n          focus: this.onFocus,\r\n          blur: this.onBlur\r\n        }\r\n      },\r\n      hasIcon() {\r\n        const {addonRight, addonLeft} = this.$slots;\r\n        return addonRight !== undefined || addonLeft !== undefined || this.addonRightIcon !== undefined || this.addonLeftIcon !== undefined\r\n      }\r\n    },\r\n    methods: {\r\n      updateValue(evt) {\r\n        let value = evt.target.value;\r\n        this.$emit('input', value);\r\n      },\r\n      onFocus(value){\r\n        this.focused = true;\r\n        this.$emit('focus', value);\r\n      },\r\n      onBlur(value){\r\n        this.focused = false;\r\n        this.$emit('blur', value);\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n\r\n</style>\r\n"]}]}