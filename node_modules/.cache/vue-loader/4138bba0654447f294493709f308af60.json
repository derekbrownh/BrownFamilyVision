{"remainingRequest":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Dev\\GitHub\\StetsonFamilyDentistry\\src\\components\\Badge.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\src\\components\\Badge.vue","mtime":1611012143261},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Dev\\GitHub\\StetsonFamilyDentistry\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nexport default {\n  name: 'badge',\n  props: {\n    tag: {\n      type: String,\n      default: 'span'\n    },\n    href: String,\n    type: {\n      type: String,\n      default: 'default',\n      validator: (value) => {\n        let acceptedValues = ['primary', 'info', 'success', 'warning', 'danger', 'default', 'neutral'];\n        return acceptedValues.indexOf(value) !== -1\n      }\n    }\n  },\n  computed: {\n    componentTag() {\n      return this.href ? 'a' : this.tag;\n    }\n  }\n}\n",{"version":3,"sources":["Badge.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Badge.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <component :is=\"componentTag\" class=\"n-badge\" :class=\"`badge-${type}`\" :href=\"href\">\r\n    <slot></slot>\r\n  </component>\r\n</template>\r\n<script>\r\n  export default {\r\n    name: 'badge',\r\n    props: {\r\n      tag: {\r\n        type: String,\r\n        default: 'span'\r\n      },\r\n      href: String,\r\n      type: {\r\n        type: String,\r\n        default: 'default',\r\n        validator: (value) => {\r\n          let acceptedValues = ['primary', 'info', 'success', 'warning', 'danger', 'default', 'neutral'];\r\n          return acceptedValues.indexOf(value) !== -1\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      componentTag() {\r\n        return this.href ? 'a' : this.tag;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n</style>\r\n"]}]}